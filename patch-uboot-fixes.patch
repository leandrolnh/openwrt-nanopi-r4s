diff --git a/package/boot/uboot-rockchip/patches/304-mmc-dw_mmc-Fixes-timeout-issue-for-FIFO-mode.patch b/package/boot/uboot-rockchip/patches/304-mmc-dw_mmc-Fixes-timeout-issue-for-FIFO-mode.patch
new file mode 100644
index 0000000000..f30886e668
--- /dev/null
+++ b/package/boot/uboot-rockchip/patches/304-mmc-dw_mmc-Fixes-timeout-issue-for-FIFO-mode.patch
@@ -0,0 +1,36 @@
+From 6a662654973ff75baa44288829142eed4ed5a411 Mon Sep 17 00:00:00 2001
+From: hmz007 <hmz007@gmail.com>
+Date: Tue, 11 Jan 2022 16:22:04 +0800
+Subject: [PATCH 304/308] mmc: dw_mmc: Fixes timeout issue for FIFO mode
+
+Clearing the DTO interrupt should be unnecessary, and it would
+potentially result in never receiving this interrupt again.
+
+Do power-on or reset from uboot for a while can reproduce the issue:
+  dwmci_data_transfer: Timeout waiting for data!
+  mmc_load_image_raw_sector: mmc block read error
+
+Tested on NanoPi R4S with SanDisk Extreme PRO 32GB.
+
+Fixes: 8cb9d3ed3a ("mmc: dw_mmc: Fixes data read when receiving DTO interrupt in FIFO mode")
+Signed-off-by: hmz007 <hmz007@gmail.com>
+---
+ drivers/mmc/dw_mmc.c | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/drivers/mmc/dw_mmc.c b/drivers/mmc/dw_mmc.c
+index a949dad574..8fa26b340b 100644
+--- a/drivers/mmc/dw_mmc.c
++++ b/drivers/mmc/dw_mmc.c
+@@ -168,7 +168,7 @@ static int dwmci_data_transfer(struct dwmci_host *host, struct mmc_data *data)
+ 			if (data->flags == MMC_DATA_READ &&
+ 			    (mask & (DWMCI_INTMSK_RXDR | DWMCI_INTMSK_DTO))) {
+ 				dwmci_writel(host, DWMCI_RINTSTS,
+-					     DWMCI_INTMSK_RXDR | DWMCI_INTMSK_DTO);
++					     DWMCI_INTMSK_RXDR);
+ 				while (size) {
+ 					ret = dwmci_fifo_ready(host,
+ 							DWMCI_FIFO_EMPTY,
+-- 
+2.34.1
+
diff --git a/package/boot/uboot-rockchip/patches/305-common-bouncebuf-Add-arch_addr_aligned-hook-for-rk33.patch b/package/boot/uboot-rockchip/patches/305-common-bouncebuf-Add-arch_addr_aligned-hook-for-rk33.patch
new file mode 100644
index 0000000000..ca83565e16
--- /dev/null
+++ b/package/boot/uboot-rockchip/patches/305-common-bouncebuf-Add-arch_addr_aligned-hook-for-rk33.patch
@@ -0,0 +1,87 @@
+From 7b108ebc5f9ac82487ad17dea0ae7163285d906f Mon Sep 17 00:00:00 2001
+From: hmz007 <hmz007@gmail.com>
+Date: Wed, 12 Jan 2022 10:59:31 +0800
+Subject: [PATCH 305/308] common: bouncebuf: Add arch_addr_aligned() hook for
+ rk3399
+
+As described in rk3399-u-boot.dtsi ("mmc to sram can't do dma"),
+this restrict can be sorted out by adding a hook and returning
+the non-DRAM area as Unaligned (0) in rk3399's implementation.
+
+Then we can enable DMA mode and save about 200ms of SPL boot.
+
+Signed-off-by: hmz007 <hmz007@gmail.com>
+---
+ arch/arm/dts/rk3399-u-boot.dtsi        |  3 ---
+ arch/arm/mach-rockchip/rk3399/rk3399.c | 13 +++++++++++++
+ common/bouncebuf.c                     |  9 +++++++--
+ 3 files changed, 20 insertions(+), 5 deletions(-)
+
+diff --git a/arch/arm/dts/rk3399-u-boot.dtsi b/arch/arm/dts/rk3399-u-boot.dtsi
+index 73922c328a..57e1a7feab 100644
+--- a/arch/arm/dts/rk3399-u-boot.dtsi
++++ b/arch/arm/dts/rk3399-u-boot.dtsi
+@@ -119,9 +119,6 @@
+ 
+ &sdmmc {
+ 	u-boot,dm-pre-reloc;
+-
+-	/* mmc to sram can't do dma, prevent aborts transferring TF-A parts */
+-	u-boot,spl-fifo-mode;
+ };
+ 
+ &spi1 {
+diff --git a/arch/arm/mach-rockchip/rk3399/rk3399.c b/arch/arm/mach-rockchip/rk3399/rk3399.c
+index 869d2159be..fc0292e6be 100644
+--- a/arch/arm/mach-rockchip/rk3399/rk3399.c
++++ b/arch/arm/mach-rockchip/rk3399/rk3399.c
+@@ -111,6 +111,19 @@ int arch_cpu_init(void)
+ 	return 0;
+ }
+ 
++int arch_addr_aligned(void *ubuf)
++{
++#define DRAM_END	0xf8000000
++
++	if ((uintptr_t)ubuf < DRAM_END) {
++		/* Aligned for DRAM area */
++		return 1;
++	}
++
++	debug("Unsupported buffer for DMA transfer\n");
++	return 0;
++}
++
+ #ifdef CONFIG_DEBUG_UART_BOARD_INIT
+ void board_debug_uart_init(void)
+ {
+diff --git a/common/bouncebuf.c b/common/bouncebuf.c
+index 6d98920de6..5f510a04ec 100644
+--- a/common/bouncebuf.c
++++ b/common/bouncebuf.c
+@@ -13,6 +13,12 @@
+ #include <bouncebuf.h>
+ #include <asm/cache.h>
+ 
++__weak int arch_addr_aligned(void *ubuf)
++{
++	/* Aligned */
++	return 1;
++}
++
+ static int addr_aligned(struct bounce_buffer *state)
+ {
+ 	const ulong align_mask = ARCH_DMA_MINALIGN - 1;
+@@ -29,8 +35,7 @@ static int addr_aligned(struct bounce_buffer *state)
+ 		return 0;
+ 	}
+ 
+-	/* Aligned */
+-	return 1;
++	return arch_addr_aligned(state->user_buffer);
+ }
+ 
+ int bounce_buffer_start_extalign(struct bounce_buffer *state, void *data,
+-- 
+2.34.1
+
diff --git a/package/boot/uboot-rockchip/patches/306-arm64-rk3399-r4s-disable-nodes-for-vopb-vopl.patch b/package/boot/uboot-rockchip/patches/306-arm64-rk3399-r4s-disable-nodes-for-vopb-vopl.patch
new file mode 100644
index 0000000000..21e3c763da
--- /dev/null
+++ b/package/boot/uboot-rockchip/patches/306-arm64-rk3399-r4s-disable-nodes-for-vopb-vopl.patch
@@ -0,0 +1,41 @@
+From 8a8b3ef12c68ad662223aefb4a46b1ca43e23482 Mon Sep 17 00:00:00 2001
+From: hmz007 <hmz007@gmail.com>
+Date: Wed, 12 Jan 2022 11:00:08 +0800
+Subject: [PATCH 306/308] arm64: rk3399: r4s: disable nodes for vopb/vopl
+
+Disable vopb and vopl to fix:
+  rk3399_vop vop@ff8f0000: failed to get ahb reset (ret=-524)
+  rk3399_vop vop@ff8f0000: failed to get ahb reset (ret=-524)
+
+Signed-off-by: hmz007 <hmz007@gmail.com>
+---
+ arch/arm/dts/rk3399-nanopi-r4s.dts | 16 ++++++++++++++++
+ 1 file changed, 16 insertions(+)
+
+diff --git a/arch/arm/dts/rk3399-nanopi-r4s.dts b/arch/arm/dts/rk3399-nanopi-r4s.dts
+index 6f2cf17bf1..e7c6daddd5 100644
+--- a/arch/arm/dts/rk3399-nanopi-r4s.dts
++++ b/arch/arm/dts/rk3399-nanopi-r4s.dts
+@@ -136,3 +136,19 @@
+ &vcc3v3_sys {
+ 	vin-supply = <&vcc5v0_sys>;
+ };
++
++&vopb {
++	status = "disabled";
++};
++
++&vopb_mmu {
++	status = "disabled";
++};
++
++&vopl {
++	status = "disabled";
++};
++
++&vopl_mmu {
++	status = "disabled";
++};
+-- 
+2.34.1
+
diff --git a/package/boot/uboot-rockchip/patches/307-configs-Add-CONFIG_SYS_MMC_ENV_DEV-1-for-nanopi-r4s.patch b/package/boot/uboot-rockchip/patches/307-configs-Add-CONFIG_SYS_MMC_ENV_DEV-1-for-nanopi-r4s.patch
new file mode 100644
index 0000000000..d84651eb53
--- /dev/null
+++ b/package/boot/uboot-rockchip/patches/307-configs-Add-CONFIG_SYS_MMC_ENV_DEV-1-for-nanopi-r4s.patch
@@ -0,0 +1,25 @@
+From 92c1bcf0983464f7bcc9e38bc2a6edccc239bd93 Mon Sep 17 00:00:00 2001
+From: hmz007 <hmz007@gmail.com>
+Date: Wed, 12 Jan 2022 11:00:21 +0800
+Subject: [PATCH 307/308] configs: Add CONFIG_SYS_MMC_ENV_DEV=1 for nanopi-r4s
+
+Signed-off-by: hmz007 <hmz007@gmail.com>
+---
+ configs/nanopi-r4s-rk3399_defconfig | 1 +
+ 1 file changed, 1 insertion(+)
+
+diff --git a/configs/nanopi-r4s-rk3399_defconfig b/configs/nanopi-r4s-rk3399_defconfig
+index 351d2eb553..0f22737d54 100644
+--- a/configs/nanopi-r4s-rk3399_defconfig
++++ b/configs/nanopi-r4s-rk3399_defconfig
+@@ -25,6 +25,7 @@ CONFIG_SPL_OF_CONTROL=y
+ CONFIG_OF_SPL_REMOVE_PROPS="pinctrl-0 pinctrl-names clock-names interrupt-parent assigned-clocks assigned-clock-rates assigned-clock-parents"
+ CONFIG_ENV_IS_IN_MMC=y
+ CONFIG_SYS_RELOC_GD_ENV_ADDR=y
++CONFIG_SYS_MMC_ENV_DEV=1
+ CONFIG_ROCKCHIP_GPIO=y
+ CONFIG_SYS_I2C_ROCKCHIP=y
+ CONFIG_MMC_DW=y
+-- 
+2.34.1
+
